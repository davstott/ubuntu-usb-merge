#!/bin/bash
set -e; set -u

if test $# -ne 1
  then
    echo "Usage $0 /path/to/mountedUSBDrive"
    exit 1
fi

if ! which mksquashfs >/dev/null 2>&1; then
    echo "mksquashfs is required, but was not found; please install mksquashfs-tools"
    exit 1
fi

# adding a trailing / here so we don't accidentally start with / later on
usbpath=$1/
#check for root
#look up disk space requirements from usb and check
#option for making safer by copying from usb 1st to make a backup

usblive=$(mktemp -d /var/tmp/usblive.XXXXXX)
cd "${usblive}"
mkdir readonly readwrite merged
echo "Mounting ${usbpath}casper/filesystem.squashfs"
mount "${usbpath}"casper/filesystem.squashfs readonly -t squashfs -o loop,ro

echo "Checking ${usbpath}casper-rw"
fsck ${usbpath}casper-rw
echo "Mounting ${usbpath}casper-rw"
mount "${usbpath}"casper-rw readwrite -o loop,rw
# different versions of Ubuntu put the upper half of the filesystem in different places
upperpath=readwrite
if test (-d readwrite/upper) then
  upperpath=${upperpath}/upper
fi
echo "Path to rw part of filesystem detected as ${upperpath}"
echo "Mounting overlayfs"
mount none merged -o lowerdir=readonly,upperdir=${upperpath} -t overlayfs
exit 1
echo "Making new squashfs"
mksquashfs merged newfilesystem.squashfs -comp xz

echo "Unmounting merged, casper-rw and old squashfs"
umount merged
umount readwrite
umount readonly

echo "mounting new squashfs and making new manifest"
mount newfilesystem.squashfs readonly -o loop,ro -t squashfs
chroot readonly dpkg-query -W --showformat='${Package} ${Version}\n' > newfilesystem.manifest
printf $(du -sx --block-size=1 readonly | cut -f1) > newfilesystem.size 

echo "unmounting new squashfs and copying back to usb"
umount readonly

cp newfilesystem.squashfs "${usbpath}"casper/filesystem.squashfs
cp newfilesystem.size "${usbpath}"casper/filesystem.size
cp newfilesystem.manifest "${usbpath}"casper/filesystem.manifest

echo "resetting casper-rw"
mkfs -t ext3 "${usbpath}"casper-rw

echo "cleaning up"
cd /var/tmp
rm -rf "${usblive}"
